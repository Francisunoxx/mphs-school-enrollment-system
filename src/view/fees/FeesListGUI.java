/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.fees;

import daoimpl.FeeDaoImpl;
import daoimpl.GradeLevelDaoImpl;
import java.awt.Color;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import daoimpl.SchoolYearDaoImpl;
import component_model_loader.JTableGUIUtil;
import javax.swing.DefaultComboBoxModel;

/**
 *
 * @author Acer
 */
public class FeesListGUI extends javax.swing.JPanel {

    /**
     * Creates new form FeesListGUI
     */
    public FeesListGUI() {
        initComponents();
        SchoolYearDaoImpl sy = new SchoolYearDaoImpl();
        
        UIManager.put( "ComboBox.disabledBackground", new Color(212,212,210) );
        UIManager.put( "ComboBox.disabledForeground", Color.BLACK );
//        tuitionAssignmentYearFromJcbx.setModel(sy.getAllStart());
        tuitionAssignmentYearFromJcbx.setSelectedIndex(-1);
//        tuitionAssignmentYearToJcbx.setModel(sy.getAllEnd());
        tuitionAssignmentYearToJcbx.setSelectedIndex(-1);
//        tuitionAssignmentGradeLevelJcbx.setModel(GradeLevelDaoImpl.getAll());
        tuitionAssignmentGradeLevelJcbx.setSelectedIndex(-1);
//        viewByGradeLevelJcbx.setModel(GradeLevelDaoImpl.getAll());
        viewByGradeLevelJcbx.setSelectedIndex(-1);
//        viewByFeeTypeJcbx.setModel(FeeDaoImpl.getTypes());
        viewByFeeTypeJcbx.setSelectedIndex(-1);
        JTableGUIUtil.setCellsAlignment(feesListJtbl, SwingConstants.CENTER);
        //feesListJtbl.setModel(FeeDaoImpl.getListOfGradeLevelWithFees(feesListJtbl));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        assignedFeesListJtbl = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        viewByGradeLevelJcb = new javax.swing.JCheckBox();
        viewByGradeLevelJcbx = new javax.swing.JComboBox<>();
        viewByFeeTypeJcb = new javax.swing.JCheckBox();
        viewByFeeTypeJcbx = new javax.swing.JComboBox<>();
        viewAllJcb = new javax.swing.JCheckBox();
        jScrollPane3 = new javax.swing.JScrollPane();
        feesListJtbl = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        schoolYearJlbl = new javax.swing.JLabel();
        tuitionAssignmentYearFromJcbx = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        tuitionAssignmentYearToJcbx = new javax.swing.JComboBox<>();
        gradeLevelJlbl = new javax.swing.JLabel();
        tuitionAssignmentGradeLevelJcbx = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        tuitionAssignmentSaveTuitionFeesJbtn = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        setLayout(new java.awt.GridBagLayout());

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new java.awt.GridBagLayout());

        assignedFeesListJtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title ", "Amount", "Fee Type", "Grade Level"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(assignedFeesListJtbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(jScrollPane2, gridBagConstraints);

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new java.awt.GridBagLayout());

        jButton1.setText(">>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel3.add(jButton1, gridBagConstraints);

        jButton2.setText("<<");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel3.add(jButton2, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(jPanel3, gridBagConstraints);

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel5.setLayout(new java.awt.GridBagLayout());

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Filter"));
        jPanel6.setLayout(new java.awt.GridBagLayout());

        viewByGradeLevelJcb.setText("View By Grade Level");
        viewByGradeLevelJcb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                viewByGradeLevelJcbItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel6.add(viewByGradeLevelJcb, gridBagConstraints);

        viewByGradeLevelJcbx.setEnabled(false);
        viewByGradeLevelJcbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                viewByGradeLevelJcbxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel6.add(viewByGradeLevelJcbx, gridBagConstraints);

        viewByFeeTypeJcb.setText("View By Type");
        viewByFeeTypeJcb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                viewByFeeTypeJcbItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel6.add(viewByFeeTypeJcb, gridBagConstraints);

        viewByFeeTypeJcbx.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 4;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel6.add(viewByFeeTypeJcbx, gridBagConstraints);

        viewAllJcb.setText("View All");
        viewAllJcb.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                viewAllJcbItemStateChanged(evt);
            }
        });
        viewAllJcb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllJcbActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel6.add(viewAllJcb, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel5.add(jPanel6, gridBagConstraints);

        feesListJtbl.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title ", "Amount", "Fee Type", "Grade Level"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        feesListJtbl.getTableHeader().setReorderingAllowed(false);
        feesListJtbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                feesListJtblMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(feesListJtbl);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel5.add(jScrollPane3, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridheight = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(jPanel5, gridBagConstraints);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tuition Assignment"));
        jPanel1.setLayout(new java.awt.GridBagLayout());

        schoolYearJlbl.setText("School Year");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(schoolYearJlbl, gridBagConstraints);

        tuitionAssignmentYearFromJcbx.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                tuitionAssignmentYearFromJcbxItemStateChanged(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(tuitionAssignmentYearFromJcbx, gridBagConstraints);

        jLabel1.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jLabel1, gridBagConstraints);

        tuitionAssignmentYearToJcbx.setEnabled(false);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(tuitionAssignmentYearToJcbx, gridBagConstraints);

        gradeLevelJlbl.setText("Grade Level");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(gradeLevelJlbl, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 5;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(tuitionAssignmentGradeLevelJcbx, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(jPanel1, gridBagConstraints);

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel4.setLayout(new java.awt.GridBagLayout());

        tuitionAssignmentSaveTuitionFeesJbtn.setText("Save");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel4.add(tuitionAssignmentSaveTuitionFeesJbtn, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel2.add(jPanel4, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.weighty = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        add(jPanel2, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void tuitionAssignmentYearFromJcbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_tuitionAssignmentYearFromJcbxItemStateChanged
        if(tuitionAssignmentYearFromJcbx.getSelectedIndex() > -1){
            int selected = tuitionAssignmentYearFromJcbx.getSelectedIndex();
            tuitionAssignmentYearToJcbx.setSelectedIndex(selected);
        }
    }//GEN-LAST:event_tuitionAssignmentYearFromJcbxItemStateChanged

    private void viewAllJcbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllJcbActionPerformed
    }//GEN-LAST:event_viewAllJcbActionPerformed

    private void viewAllJcbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_viewAllJcbItemStateChanged
        // TODO add your handling code here:
        if(viewAllJcb.getModel().isSelected() == true){
            viewByGradeLevelJcb.setEnabled(false);
            viewByGradeLevelJcb.setSelected(false);
            viewByFeeTypeJcb.setEnabled(false);
            viewByFeeTypeJcb.setSelected(false);
            
//            DefaultTableModel myModel = (FeeDaoImpl.getAll(feesListJtbl));
//            feesListJtbl.setModel(myModel);
            
        }else{
            DefaultTableModel myModel = (DefaultTableModel) feesListJtbl.getModel();
            myModel.setRowCount(0);
            viewByGradeLevelJcb.setEnabled(true);
            viewByFeeTypeJcb.setEnabled(true);
        }
    }//GEN-LAST:event_viewAllJcbItemStateChanged

    private void viewByGradeLevelJcbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_viewByGradeLevelJcbItemStateChanged
        // TODO add your handling code here:
        if(viewByGradeLevelJcb.getModel().isSelected() == true){
            viewByGradeLevelJcbx.setEnabled(true);
        }else{
            viewByGradeLevelJcbx.setEnabled(false);
            viewByGradeLevelJcbx.setSelectedIndex(-1);
            DefaultTableModel myModel = (DefaultTableModel)feesListJtbl.getModel();
            myModel.setRowCount(0);
        }
        
    }//GEN-LAST:event_viewByGradeLevelJcbItemStateChanged

    private void viewByFeeTypeJcbItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_viewByFeeTypeJcbItemStateChanged
        // TODO add your handling code here:
        if(viewByFeeTypeJcb.getModel().isSelected() == true){
            viewByFeeTypeJcbx.setEnabled(true);
        }else{
            viewByFeeTypeJcbx.setEnabled(false);
        }
    }//GEN-LAST:event_viewByFeeTypeJcbItemStateChanged

    private void viewByGradeLevelJcbxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_viewByGradeLevelJcbxItemStateChanged
        // TODO add your handling code here:
        
        
        if( (viewByGradeLevelJcbx.getSelectedIndex() > -1)&&(viewByFeeTypeJcbx.getSelectedIndex() == -1) ){
            String myGradeLevel = viewByGradeLevelJcbx.getSelectedItem().toString();
//            feesListJtbl.setModel(FeeDaoImpl.getByGradeLevel(myGradeLevel, feesListJtbl));
        }
    }//GEN-LAST:event_viewByGradeLevelJcbxItemStateChanged

    public void copyTableData(JTable aSourceTable, JTable aDestinationTable) {
        int mySelectedRow = aSourceTable.getSelectedRow(); //selected row whic has the data to be added
        Object mySelectedFeeTitle = aSourceTable.getValueAt(mySelectedRow, 0);
        Object mySelectedFeeAmount = aSourceTable.getValueAt(mySelectedRow, 1);
        Object mySelectedFeeFeeType = aSourceTable.getValueAt(mySelectedRow, 2);
        Object mySelectedFeeGradeLevel = aSourceTable.getValueAt(mySelectedRow, 3);
        
        JOptionPane.showMessageDialog(null,mySelectedFeeTitle+""+mySelectedFeeAmount+""+mySelectedFeeFeeType+""+mySelectedFeeGradeLevel);
        
        DefaultTableModel myModel;

        int myRowCount = aDestinationTable.getRowCount();
        int myColumnCount = aDestinationTable.getColumnCount();
        
        List<List<Object>> myRowValues = new ArrayList<>();
        for (int j = 0; j < myRowCount; j++) {
            myRowValues.add(j, new ArrayList<>());
            for (int i = 0; i < myColumnCount; i++) {
                myRowValues.get(j).add(aDestinationTable.getValueAt(j, i));
            }
        }
        
         System.out.println(myRowValues);
        
        if (myRowValues.contains(mySelectedFeeTitle)
                && myRowValues.contains(mySelectedFeeAmount)
                && myRowValues.contains(mySelectedFeeFeeType)
                && myRowValues.contains(mySelectedFeeGradeLevel) ) {
            JOptionPane.showMessageDialog(null, "Already on the list.");
        } else {
            myModel = (DefaultTableModel) aDestinationTable.getModel();

            Object[] rowData = new Object[aSourceTable.getColumnCount()];
            int mySelectedRowIndex = aSourceTable.getSelectedRow();
            for (int i = 0; i < aSourceTable.getColumnCount(); i++) {
                rowData[i] = aSourceTable.getValueAt(mySelectedRowIndex, i);
            }
            myModel.addRow(rowData);
            aDestinationTable.setModel(myModel);
        }

    }
    
    private void feesListJtblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_feesListJtblMouseClicked
        // TODO add your handling code here:
        if(evt.getClickCount() == 2){
            copyTableData(feesListJtbl, assignedFeesListJtbl);
        }
    }//GEN-LAST:event_feesListJtblMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable assignedFeesListJtbl;
    private javax.swing.JTable feesListJtbl;
    private javax.swing.JLabel gradeLevelJlbl;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel schoolYearJlbl;
    private javax.swing.JComboBox<String> tuitionAssignmentGradeLevelJcbx;
    private javax.swing.JButton tuitionAssignmentSaveTuitionFeesJbtn;
    private javax.swing.JComboBox<String> tuitionAssignmentYearFromJcbx;
    private javax.swing.JComboBox<String> tuitionAssignmentYearToJcbx;
    private javax.swing.JCheckBox viewAllJcb;
    private javax.swing.JCheckBox viewByFeeTypeJcb;
    private javax.swing.JComboBox<String> viewByFeeTypeJcbx;
    private javax.swing.JCheckBox viewByGradeLevelJcb;
    private javax.swing.JComboBox<String> viewByGradeLevelJcbx;
    // End of variables declaration//GEN-END:variables
}
